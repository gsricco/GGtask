{"ast":null,"code":"var _jsxFileName = \"/home/sergio/studyProjects/Testovie/Georgii/testovoe/src/common/components/modal/ServerModal/ServerModal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { pingServer } from \"../../../../api/serverStatusAPI\";\nimport { Modal } from \"../Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ServerModal = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState('');\n  const [err, setErr] = useState(false);\n  const handleServer = async () => {\n    try {\n      const data = await pingServer();\n      setMessage(data.message);\n      setErr(false);\n    } catch (error) {\n      setMessage(String(error));\n      setErr(true);\n    }\n    setOpen(true);\n    const scrollBarWidth = window.innerWidth - document.documentElement.clientWidth;\n    document.body.style.paddingRight = `${scrollBarWidth}px`;\n    document.body.style.overflow = 'hidden';\n  };\n  const handleCloseModal = () => {\n    setOpen(false);\n    document.body.style.paddingRight = '0';\n    document.body.style.overflow = 'auto';\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleServer,\n      disabled: open,\n      children: \"Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(Modal, {\n      handleCloseModal: handleCloseModal,\n      message: message,\n      err: err,\n      title: \"Server ping\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true);\n};\n_s(ServerModal, \"9tELTqFZ5p4BRbxZIIzpb1oluxY=\");\n_c = ServerModal;\nvar _c;\n$RefreshReg$(_c, \"ServerModal\");","map":{"version":3,"names":["React","useState","pingServer","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","ServerModal","_s","open","setOpen","message","setMessage","err","setErr","handleServer","data","error","String","scrollBarWidth","window","innerWidth","document","documentElement","clientWidth","body","style","paddingRight","overflow","handleCloseModal","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/home/sergio/studyProjects/Testovie/Georgii/testovoe/src/common/components/modal/ServerModal/ServerModal.tsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport {pingServer} from \"../../../../api/serverStatusAPI\";\nimport {Modal} from \"../Modal\";\n\n\nexport const ServerModal = () => {\n  const [open, setOpen] = useState(false)\n  const [message, setMessage] = useState('')\n  const [err, setErr] = useState(false)\n  const handleServer = async () => {\n    try {\n      const data = await pingServer();\n      setMessage(data.message);\n      setErr(false)\n    } catch (error) {\n      setMessage(String(error));\n      setErr(true)\n    }\n    setOpen(true);\n    const scrollBarWidth = window.innerWidth - document.documentElement.clientWidth;\n    document.body.style.paddingRight = `${scrollBarWidth}px`;\n    document.body.style.overflow = 'hidden';\n  };\n  const handleCloseModal = () => {\n    setOpen(false);\n    document.body.style.paddingRight = '0';\n    document.body.style.overflow = 'auto';\n  };\n\n  return (\n    <>\n      <button onClick={handleServer} disabled={open}>Server</button>\n      {open &&<Modal handleCloseModal={handleCloseModal} message={message} err={err} title={\"Server ping\"}/>}\n    </>\n  );\n};\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,UAAU,QAAO,iCAAiC;AAC1D,SAAQC,KAAK,QAAO,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/B,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMf,UAAU,CAAC,CAAC;MAC/BW,UAAU,CAACI,IAAI,CAACL,OAAO,CAAC;MACxBG,MAAM,CAAC,KAAK,CAAC;IACf,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdL,UAAU,CAACM,MAAM,CAACD,KAAK,CAAC,CAAC;MACzBH,MAAM,CAAC,IAAI,CAAC;IACd;IACAJ,OAAO,CAAC,IAAI,CAAC;IACb,MAAMS,cAAc,GAAGC,MAAM,CAACC,UAAU,GAAGC,QAAQ,CAACC,eAAe,CAACC,WAAW;IAC/EF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,YAAY,GAAI,GAAER,cAAe,IAAG;IACxDG,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACE,QAAQ,GAAG,QAAQ;EACzC,CAAC;EACD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BnB,OAAO,CAAC,KAAK,CAAC;IACdY,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACC,YAAY,GAAG,GAAG;IACtCL,QAAQ,CAACG,IAAI,CAACC,KAAK,CAACE,QAAQ,GAAG,MAAM;EACvC,CAAC;EAED,oBACExB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACE1B,OAAA;MAAQ2B,OAAO,EAAEhB,YAAa;MAACiB,QAAQ,EAAEvB,IAAK;MAAAqB,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7D3B,IAAI,iBAAGL,OAAA,CAACF,KAAK;MAAC2B,gBAAgB,EAAEA,gBAAiB;MAAClB,OAAO,EAAEA,OAAQ;MAACE,GAAG,EAAEA,GAAI;MAACwB,KAAK,EAAE;IAAc;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACtG,CAAC;AAEP,CAAC;AAAC5B,EAAA,CA9BWD,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}