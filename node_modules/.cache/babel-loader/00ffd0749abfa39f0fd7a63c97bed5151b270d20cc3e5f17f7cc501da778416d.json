{"ast":null,"code":"const isEmpty = value => {\n  return value.trim() === \"\";\n};\nconst isValidEmail = email => {\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n  return emailPattern.test(email);\n};\nconst isValidPhone = phone => {\n  const phonePattern = /^\\+375 \\(\\d{2}\\) \\d{3}-\\d{2}-\\d{2}$/;\n  return phonePattern.test(phone);\n};\nexport const validateForm = formData => {\n  const errors = {};\n  if (isEmpty(formData.name)) {\n    errors.name = \"Поле Имя обязательно для заполнения\";\n  }\n  if (isEmpty(formData.email)) {\n    errors.email = \"Поле E-mail обязательно для заполнения\";\n  } else if (!isValidEmail(formData.email)) {\n    errors.email = \"Пожалуйста, введите корректный адрес электронной почты\";\n  }\n  if (isEmpty(formData.phone)) {\n    errors.phone = \"Поле Телефон обязательно для заполнения\";\n  } else if (!isValidPhone(formData.phone)) {\n    errors.phone = \"Пожалуйста, введите телефон в формате +375 ХХ ХХХ ХХ ХХ\";\n  }\n  if (isEmpty(formData.message)) {\n    errors.message = \"Поле Сообщение обязательно для заполнения\";\n  }\n  return errors;\n};","map":{"version":3,"names":["isEmpty","value","trim","isValidEmail","email","emailPattern","test","isValidPhone","phone","phonePattern","validateForm","formData","errors","name","message"],"sources":["/home/sergio/studyProjects/Testovie/Georgii/testovoe/src/common/components/forms/ContactForm/validateForm.ts"],"sourcesContent":["import {IFormData} from \"../../../types/types\";\nconst isEmpty = (value: string): boolean => {\n  return value.trim() === \"\";\n};\n\nconst isValidEmail = (email: string): boolean => {\n  const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n  return emailPattern.test(email);\n};\n\nconst isValidPhone = (phone: string): boolean => {\n  const phonePattern = /^\\+375 \\(\\d{2}\\) \\d{3}-\\d{2}-\\d{2}$/;\n  return phonePattern.test(phone);\n};\n\n\nexport const validateForm = (formData: IFormData): Record<string, string> => {\n  const errors: Record<string, string> = {};\n\n  if (isEmpty(formData.name)) {\n    errors.name = \"Поле Имя обязательно для заполнения\";\n  }\n\n  if (isEmpty(formData.email)) {\n    errors.email = \"Поле E-mail обязательно для заполнения\";\n  } else if (!isValidEmail(formData.email)) {\n    errors.email = \"Пожалуйста, введите корректный адрес электронной почты\";\n  }\n\n  if (isEmpty(formData.phone)) {\n    errors.phone = \"Поле Телефон обязательно для заполнения\";\n  } else if (!isValidPhone(formData.phone)) {\n    errors.phone = \"Пожалуйста, введите телефон в формате +375 ХХ ХХХ ХХ ХХ\";\n  }\n\n  if (isEmpty(formData.message)) {\n    errors.message = \"Поле Сообщение обязательно для заполнения\";\n  }\n\n  return errors;\n};"],"mappings":"AACA,MAAMA,OAAO,GAAIC,KAAa,IAAc;EAC1C,OAAOA,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE;AAC5B,CAAC;AAED,MAAMC,YAAY,GAAIC,KAAa,IAAc;EAC/C,MAAMC,YAAY,GAAG,mDAAmD;EACxE,OAAOA,YAAY,CAACC,IAAI,CAACF,KAAK,CAAC;AACjC,CAAC;AAED,MAAMG,YAAY,GAAIC,KAAa,IAAc;EAC/C,MAAMC,YAAY,GAAG,qCAAqC;EAC1D,OAAOA,YAAY,CAACH,IAAI,CAACE,KAAK,CAAC;AACjC,CAAC;AAGD,OAAO,MAAME,YAAY,GAAIC,QAAmB,IAA6B;EAC3E,MAAMC,MAA8B,GAAG,CAAC,CAAC;EAEzC,IAAIZ,OAAO,CAACW,QAAQ,CAACE,IAAI,CAAC,EAAE;IAC1BD,MAAM,CAACC,IAAI,GAAG,qCAAqC;EACrD;EAEA,IAAIb,OAAO,CAACW,QAAQ,CAACP,KAAK,CAAC,EAAE;IAC3BQ,MAAM,CAACR,KAAK,GAAG,wCAAwC;EACzD,CAAC,MAAM,IAAI,CAACD,YAAY,CAACQ,QAAQ,CAACP,KAAK,CAAC,EAAE;IACxCQ,MAAM,CAACR,KAAK,GAAG,wDAAwD;EACzE;EAEA,IAAIJ,OAAO,CAACW,QAAQ,CAACH,KAAK,CAAC,EAAE;IAC3BI,MAAM,CAACJ,KAAK,GAAG,yCAAyC;EAC1D,CAAC,MAAM,IAAI,CAACD,YAAY,CAACI,QAAQ,CAACH,KAAK,CAAC,EAAE;IACxCI,MAAM,CAACJ,KAAK,GAAG,yDAAyD;EAC1E;EAEA,IAAIR,OAAO,CAACW,QAAQ,CAACG,OAAO,CAAC,EAAE;IAC7BF,MAAM,CAACE,OAAO,GAAG,2CAA2C;EAC9D;EAEA,OAAOF,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}