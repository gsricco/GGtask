{"ast":null,"code":"import axios from 'axios';\nexport async function pingServer() {\n  try {\n    const response = await axios.get('https://seobility-gyzl.vercel.app/api/ping');\n    if (response.data.status === 'success') {\n      return response.data;\n    } else {\n      throw new Error(response.data.message || 'Ошибка на сервере');\n    }\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      const axiosError = error;\n      throw new Error(`Сетевая ошибка: ${axiosError.message}`);\n    } else {\n      throw error;\n    }\n  }\n}","map":{"version":3,"names":["axios","pingServer","response","get","data","status","Error","message","error","isAxiosError","axiosError"],"sources":["/home/sergio/studyProjects/Testovie/Georgii/testovoe/src/api/serverStatusAPI.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\n\ninterface PingResponse {\n  status: 'success';\n  message: 'Server is ready';\n}\n\nexport async function pingServer(): Promise<PingResponse> {\n  try {\n    const response: AxiosResponse<PingResponse> = await axios.get('https://seobility-gyzl.vercel.app/api/ping');\n    if (response.data.status === 'success') {\n      return response.data;\n    } else {\n      throw new Error(response.data.message || 'Ошибка на сервере');\n    }\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      const axiosError = error;\n\n      throw new Error(`Сетевая ошибка: ${axiosError.message}`);\n    } else {\n      throw error;\n    }\n  }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;AAO5C,OAAO,eAAeC,UAAUA,CAAA,EAA0B;EACxD,IAAI;IACF,MAAMC,QAAqC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,4CAA4C,CAAC;IAC3G,IAAID,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;MACtC,OAAOH,QAAQ,CAACE,IAAI;IACtB,CAAC,MAAM;MACL,MAAM,IAAIE,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG,OAAO,IAAI,mBAAmB,CAAC;IAC/D;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIR,KAAK,CAACS,YAAY,CAACD,KAAK,CAAC,EAAE;MAC7B,MAAME,UAAU,GAAGF,KAAK;MAExB,MAAM,IAAIF,KAAK,CAAE,mBAAkBI,UAAU,CAACH,OAAQ,EAAC,CAAC;IAC1D,CAAC,MAAM;MACL,MAAMC,KAAK;IACb;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}